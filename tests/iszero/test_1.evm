    /* "iszero.sol":25:227  contract test {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":5:14   */
  dup1
    /* "--CODEGEN--":2:4   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":27:28   */
  0x00
    /* "--CODEGEN--":24:25   */
  dup1
    /* "--CODEGEN--":17:29   */
  revert
    /* "--CODEGEN--":2:4   */
tag_1:
    /* "iszero.sol":25:227  contract test {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "iszero.sol":25:227  contract test {... */
      mstore(0x40, 0x80)
      callvalue
        /* "--CODEGEN--":5:14   */
      dup1
        /* "--CODEGEN--":2:4   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":27:28   */
      0x00
        /* "--CODEGEN--":24:25   */
      dup1
        /* "--CODEGEN--":17:29   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_1:
        /* "iszero.sol":25:227  contract test {... */
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x7f98a45e
      eq
      tag_3
      jumpi
    tag_2:
        /* "--CODEGEN--":12:13   */
      0x00
        /* "--CODEGEN--":9:10   */
      dup1
        /* "--CODEGEN--":2:14   */
      revert
        /* "iszero.sol":45:225  function func(uint256 input) public pure returns(bool){... */
    tag_3:
      tag_4
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":15:17   */
      0x20
        /* "--CODEGEN--":10:13   */
      dup2
        /* "--CODEGEN--":7:18   */
      lt
        /* "--CODEGEN--":4:6   */
      iszero
      tag_5
      jumpi
        /* "--CODEGEN--":31:32   */
      0x00
        /* "--CODEGEN--":28:29   */
      dup1
        /* "--CODEGEN--":21:33   */
      revert
        /* "--CODEGEN--":4:6   */
    tag_5:
      pop
        /* "iszero.sol":45:225  function func(uint256 input) public pure returns(bool){... */
      calldataload
      tag_6
      jump	// in
    tag_4:
      0x40
      dup1
      mload
      swap2
      iszero
      iszero
      dup3
      mstore
      mload
      swap1
      dup2
      swap1
      sub
      0x20
      add
      swap1
      return
    tag_6:
        /* "iszero.sol":94:98  bool */
      0x00
        /* "iszero.sol":119:120  2 */
      0x02
        /* "iszero.sol":113:118  input */
      dup3
        /* "iszero.sol":113:120  input%2 */
      mod
        /* "iszero.sol":124:125  1 */
      0x01
        /* "iszero.sol":113:125  input%2 == 1 */
      eq
        /* "iszero.sol":109:197  if (input%2 == 1) {... */
      iszero
      tag_9
      jumpi
      pop
        /* "iszero.sol":182:186  true */
      0x01
        /* "iszero.sol":175:186  return true */
      jump(tag_7)
        /* "iszero.sol":109:197  if (input%2 == 1) {... */
    tag_9:
      pop
        /* "iszero.sol":213:218  false */
      0x00
        /* "iszero.sol":45:225  function func(uint256 input) public pure returns(bool){... */
    tag_7:
      swap2
      swap1
      pop
      jump	// out

    auxdata: 0xa26469706673582212207236eba9cd64fa04862548156af945dbeb7ce8fa100c21e15d0d511148882d7f64736f6c63430006040033
}
